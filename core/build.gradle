/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.2/userguide/building_java_projects.html
 */

plugins {
    // Support API and implementation separation.
    id "java-library"
    // Support building a distribution ZIP that contains the JAR file and the library dependencies.
    id "java-library-distribution"
    // Support publishing build artifacts to an Apache Maven repository.
    id "maven-publish"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

// Versions of all dependencies, organized in descending alphabetical order.
def versions = [
        Aws         : "2.17.+",
        Cirrus      : "0.1.0",
        Cdk         : "1.125.+",
        Dagger      : "2.37",
        Guava       : "30.1-jre",
        Immutables  : "2.8.+",
        Jackson     : "2.12.+",
        Java        : "11",
        Javax       : "1",
        JUnit       : "5.7.+",
        LambdaCore  : "1.2.+",
        LambdaEvents: "3.10.+",
        Slf4j       : "1.7.+"
]

// GitHub organization for publishing to GitHub Packages
def organization = "project-cirrus"
// GitHub repository for publishing to GitHub Packages
def repository = String.valueOf("$rootProject.name")
group "org.cirrus"
version versions.Cirrus

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(versions.Java)
    }
    withJavadocJar()
    withSourcesJar()
}

dependencies {
    annotationProcessor "com.google.dagger:dagger-compiler:$versions.Dagger"
    annotationProcessor "org.immutables:value:$versions.Immutables"
    implementation "com.amazonaws:aws-lambda-java-core:$versions.LambdaCore"
    implementation "com.amazonaws:aws-lambda-java-events:$versions.LambdaEvents"
    implementation "com.fasterxml.jackson.core:jackson-databind:$versions.Jackson"
    implementation "com.google.dagger:dagger:$versions.Dagger"
    implementation "org.immutables:value:$versions.Immutables"
    implementation "org.slf4j:slf4j-api:$versions.Slf4j"
    implementation "com.google.guava:guava:$versions.Guava"
    implementation "software.amazon.awscdk:core:$versions.Cdk"
    implementation "software.amazon.awscdk:lambda:$versions.Cdk"
    implementation "software.amazon.awscdk:stepfunctions:$versions.Cdk"
    implementation "software.amazon.awscdk:stepfunctions-tasks:$versions.Cdk"
    implementation "software.amazon.awssdk:dynamodb:$versions.Aws"
    implementation "software.amazon.awssdk:lambda:$versions.Aws"
    implementation "software.amazon.awssdk:sns:$versions.Aws"
    implementation "software.amazon.awssdk:sqs:$versions.Aws"
    implementation "javax.inject:javax.inject:$versions.Javax"
    testImplementation "org.junit.jupiter:junit-jupiter:$versions.JUnit"
}

test {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

distributions {
    //noinspection GroovyAssignabilityCheck
    main {
        distributionBaseName = repository
    }
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/$organization/$repository")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            groupId = group
            artifactId = repository
            version = versions.Cirrus
            from components.java
        }
    }
}